---
modules:
    - docassemble.base.util
    - docassemble.base.legal
    - docassemble.income.income
    - dateutil
    - .educational_evaluations
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - massachusetts_educational_evaluations_basic_information.yml
---
metadata:
  title: |
    MAC Request for Entire Student Record
  short title: |
    Entire Record
  authors:
    - Quinten Steenhuis
    - Matt Brooks
---
features:
  bootstrap theme: mac-bootstrap.css
  progress bar: True
---
## did not generate with weaver, c&p and edited from prs which was 
## generated with weaver
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["educational_evaluations_entire_record_request"]
data:
  al_weaver_version: "1.10.0a2"
  generated on: "2023-06-03"
  title: >-
    MAC Request for Entire Student Record
  short title: >-
    Entire Record
  description: |-
    An interview to request a student's entire record.
  allowed courts: []
  categories: []
  typical role: "na"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'educational_evaluations_entire_record_request'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
id: child is in school if you need a school record
initial: True
code: |
  is_child_in_school = True
---
id: interview order entire record
mandatory: True
code: |
  user_role = "na"
  user_ask_role = "na"
  
  mac_shared_intro_questions
  if knows_special_education_director_name:
    school.recipient.name = school.special_education_director.name
    school.recipient.address = school.special_education_director.address
  else:
    school.recipient.name.first = "Special Education Director"  
  # student.enrollment_date

  educational_evaluations_entire_record_request_preview_question
  basic_questions_signature_flow    
  requestor.signature
  educational_evaluations_entire_record_request_download
---
## TODO add back in email feature to send directy to school
#  educational_evaluations_entire_record_request_concatenated = pdf_concatenate(educational_evaluations_entire_record_request_variable)
#  if done['emailed to the person receiving it']:
#    school.recipient.email
#    send_email(to=[school.recipient.email], subject=str(student.name.full()) + " Entire Student Record Request", attachments=[pdf_concatenate(educational_evaluations_entire_record_request_variable)])
#  if done["emailed to me"]:
#    requestor.email
#    send_email(to=[requestor.email], subject=str(student.name.full()) + "Entire Student Record Request", attachments=[educational_evaluations_entire_record_request_variable])
#  end_screen
---
id: entire record request intro screen
question: |
  Entire student record request
subquestion: |  
  This letter will help you request your child's entire student record.
continue button field: entire_record_request_intro_screen
---
#id: enrollment date screen
#question: |
#  When did ${student.name.first} start going to ${school.name}?
#fields:
#  - ${student.name.first}'s starting date: student.enrollment_date
#    datatype: date
#---
#id: entire record request letter screen
#question: |
#  Here is your letter
#subquestion: |  
#  1. Download and print the letter below.
#  1. Keep one copy for your own records.
#  1. Second a copy to the school district.
#    
#  * [Download as PDF](${ educational_evaluations_entire_record_request_variable.pdf.url_for() }).
#  * [Download as Microsoft Word file](${ educational_evaluations_entire_record_request_variable.docx.url_for() } ).
#
#fields:
#  - "I want a copy of my letter...": done
#    datatype: checkboxes
#    choices: 
#      - Emailed to me
#      - Emailed directly to the school principal and me
#      - Download as a Word document so that I can make edits and print it
#---
#id: entire student record recquest recipient email screen
#question: |
#  What is ${school.recipient.name.full()}'s email?
#fields:
#  - ${school.recipient.name.full()} email: school.recipient.email
#---
#id: entire student record request requestor email screen
#question: |
#  What is your email?
#fields:
#  - your email: requestor.email
#---
#id: end screen entire record request
#event: end_screen
#question: |
#  You are all done!
#buttons:
#  - Exit: exit
#  - Restart: restart
#
---
id: preview educational_evaluations_entire_record_request
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_recipient_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_educational_evaluations_entire_record_request'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: educational_evaluations_entire_record_request_preview_question    
---
code: |
  signature_fields = ['requestor.signature']
---
## TODO update review screens
## Add AL tables for objects
## Use AL dashboard to generate review screens
id: educational_evaluations_entire_record_request review screen
event: review_educational_evaluations_entire_record_request
question: |
  Review your answers
---
id: download educational_evaluations_entire_record_request
event: educational_evaluations_entire_record_request_download
question: |
  All done
subquestion: |
  Thank you. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_educational_evaluations_entire_record_request'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - educational_evaluations_entire_record_request_attachment: ALDocument.using(title="Entire Student Record Request", filename="educational_evaluations_entire_record_request", enabled=True, has_addendum=False)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[educational_evaluations_entire_record_request_attachment], filename="educational_evaluations_entire_record_request", title="All forms to download for your records", enabled=True)
  - al_recipient_bundle: ALDocumentBundle.using(elements=[educational_evaluations_entire_record_request_attachment],  filename="educational_evaluations_entire_record_request", title="All forms to file", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Entire Student Record Request
  filename: educational_evaluations_entire_record_request
  variable name: educational_evaluations_entire_record_request_attachment[i]
  skip undefined: True
  docx template file: educational_evaluations_entire_record_request.docx